<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:GitHub.UI"
                    xmlns:ui="clr-namespace:GitHub.UI;assembly=GitHub.UI"
                    xmlns:c="clr-namespace:GitHub.UI.Controls;assembly=GitHub.UI">
    
    <!-- The control template for ViewBase when HasBusyState == false -->
    <ControlTemplate x:Key="ViewBaseDefaultTemplate" TargetType="{x:Type local:ViewBase}">
        <Border Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                Padding="{TemplateBinding Padding}"
                SnapsToDevicePixels="true">
            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
        </Border>
    </ControlTemplate>

    <!-- The control template for ViewBase when HasBusyState == true -->
    <ControlTemplate x:Key="ViewBaseBusyStateTemplate" TargetType="{x:Type local:ViewBase}">
        <Border Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}"
                BorderThickness="{TemplateBinding BorderThickness}"
                Padding="{TemplateBinding Padding}"
                SnapsToDevicePixels="true">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <ui:GitHubProgressBar Foreground="{DynamicResource GitHubAccentBrush}"
                                      IsIndeterminate="True"
                                      Style="{DynamicResource GitHubProgressBar}"
                                      Visibility="{TemplateBinding IsBusy, Converter={ui:BooleanToHiddenVisibilityConverter}}"/>

                <c:Spinner Name="spinner" 
                           Grid.Row="1"
                           Width="48"
                           Height="48"
                           HorizontalAlignment="Center"
                           VerticalAlignment="Center"
                           Visibility="{TemplateBinding IsLoading, Converter={ui:BooleanToVisibilityConverter}}"/>
                
                <ContentPresenter Grid.Row="1"
                                  HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                  SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                  Visibility="{TemplateBinding IsLoading, Converter={ui:BooleanToInverseVisibilityConverter}}"/>
            </Grid>
        </Border>
    </ControlTemplate>

    <!-- Applies the control template for ViewBase depending on HasBusyState -->
    <Style TargetType="local:ViewBase">
        <Style.Triggers>
            <Trigger Property="HasBusyState" Value="False">
                <Setter Property="Template" Value="{StaticResource ViewBaseDefaultTemplate}"/>
            </Trigger>
            <Trigger Property="HasBusyState" Value="True">
                <Setter Property="Template" Value="{StaticResource ViewBaseBusyStateTemplate}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

</ResourceDictionary>